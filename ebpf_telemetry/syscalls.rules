# syscalls.rules
# each line starts with the syscall number to log
# followed by space-separated clauses
# each clause can be an argument (a0 .. a5), an operator (=, <, >, &, |)
# and a value (leading 0 for octal, 0x for hex)
# OR can be the global P or V. P indicates all events generated for this
# syscall number must correctly parse standard fields, and V indicates that
# all events for this syscall number must correctly parse any syscall-specific
# fields.
# Operator & ANDs the argument and the value and checks the result equals
# the value (&= in auditctl); and operator | ANDs the argument with the value
# and checks the result is not 0 (& in auditctl).

# open - flags includes O_WRONLY (1) or O_RDWR (2)
open a1 | 0x3
# mmap - prot has write and exec bits
mmap a2 & 0x6
# mprotect - prot has exec bit
mprotect a2 | 0x4
connect
accept
execve
# kill - signal is 9 (KILL) or 19 (STOP)
kill a1 = 9 a1 = 19
truncate
ftruncate
rename
rmdir
creat
link
unlink
symlink
chmod
fchmod
chown
fchown
lchown
ptrace
mknod
adjtimex
settimeofday
init_module
delete_module
# tkill - signal is 9 (KILL) or 19 (STOP)
tkill a1 = 9 a1 = 19
# remap_file_pages - prot has write and exec bits
remap_file_pages a2 & 0x6
clock_settime
# tgkill - signal is 9 (KILL) or 19 (STOP)
tgkill a2 = 9 a2 = 19
kexec_load
# openat - flags includes O_WRONLY (1) or O_RDWR (2)
openat a2 | 0x3
mknodat
fchownat
unlinkat
renameat
linkat
symlinkat
fchmodat
accept4
clock_adjtime
finit_module
renameat2
kexec_file_load
execveat
